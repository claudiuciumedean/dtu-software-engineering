// <auto-generated />
using System;
using LiRAMap.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace LiRAMap.Migrations
{
    [DbContext(typeof(ConditionDbContext))]
    [Migration("20200420165708_ConditionSeed")]
    partial class ConditionSeed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("LiRAMap.Models.Condition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("ConditionType")
                        .HasColumnType("integer");

                    b.Property<float>("Severity")
                        .HasColumnType("real");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("Conditions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConditionType = 3,
                            Severity = 35f,
                            Timestamp = new DateTime(2020, 4, 20, 18, 57, 7, 915, DateTimeKind.Local).AddTicks(3979)
                        },
                        new
                        {
                            Id = 2,
                            ConditionType = 9,
                            Severity = 95f,
                            Timestamp = new DateTime(2020, 4, 20, 16, 57, 7, 917, DateTimeKind.Utc).AddTicks(3207)
                        },
                        new
                        {
                            Id = 3,
                            ConditionType = 10,
                            Severity = 53f,
                            Timestamp = new DateTime(2020, 4, 20, 18, 57, 7, 917, DateTimeKind.Local).AddTicks(3217)
                        },
                        new
                        {
                            Id = 4,
                            ConditionType = 0,
                            Severity = 100f,
                            Timestamp = new DateTime(2020, 4, 20, 16, 57, 7, 917, DateTimeKind.Utc).AddTicks(3237)
                        });
                });

            modelBuilder.Entity("LiRAMap.Models.ConditionCoverage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("ConditionId")
                        .HasColumnType("integer");

                    b.Property<int?>("EndMeters")
                        .HasColumnType("integer");

                    b.Property<int>("StartMeters")
                        .HasColumnType("integer");

                    b.Property<decimal>("Way")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.HasIndex("ConditionId");

                    b.HasIndex("Way");

                    b.ToTable("ConditionCoverages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConditionId = 1,
                            EndMeters = 150,
                            StartMeters = 0,
                            Way = 27294498m
                        },
                        new
                        {
                            Id = 2,
                            ConditionId = 1,
                            EndMeters = 250,
                            StartMeters = 0,
                            Way = 26264463m
                        },
                        new
                        {
                            Id = 3,
                            ConditionId = 1,
                            EndMeters = 1000,
                            StartMeters = 575,
                            Way = 106151483m
                        },
                        new
                        {
                            Id = 4,
                            ConditionId = 2,
                            EndMeters = 78,
                            StartMeters = 52,
                            Way = 131196793m
                        },
                        new
                        {
                            Id = 5,
                            ConditionId = 3,
                            StartMeters = 60,
                            Way = 131196793m
                        },
                        new
                        {
                            Id = 6,
                            ConditionId = 4,
                            StartMeters = 10,
                            Way = 25657310m
                        });
                });

            modelBuilder.Entity("LiRAMap.Models.ConditionCoverage", b =>
                {
                    b.HasOne("LiRAMap.Models.Condition", "Condition")
                        .WithMany("Coverage")
                        .HasForeignKey("ConditionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
